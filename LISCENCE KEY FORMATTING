
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char * licenseKeyFormatting(char * s, int k){
    int alphaNumer = 0;

    for (int i = 0; s[i]; i++) {
        if (isalnum(s[i]))                      //can't directly add isalnum, returns 8 or 0 not 1 or 0...
            alphaNumer += 1;
    }

    char *res = (char *)malloc((alphaNumer * 2 + 1) * sizeof(char));

    int firstGroup = alphaNumer % k;
    int i = 0, j = 0; //i to string s; j to res

    if (firstGroup) { //making the first group
        while (s[i] && (j < firstGroup)) {      //bounding in ZxZ groups...
            if (s[i] != '-') {
                res[j++] = toupper(s[i]);
                alphaNumer--;
            }
            i++;
        }

        if (alphaNumer > 0)
            res[j++] = '-';
    }


    int kCount = k;
    while (s[i]) {  //build the rest of the string
        if (s[i] != '-') {
            res[j++] = toupper(s[i]);
            kCount--;
            alphaNumer--;
        }

        if ((kCount == 0) && (alphaNumer > 0)) { //did i feel like doing something slick? no!
            kCount = k;  //i felt like adding dahses
            res[j++] = '-';
        }

        i++;
    }


    res[j++] ='\0';
    return res;
}
